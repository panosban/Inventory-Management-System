
package inventoryproject;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author panos
 */
public class ShowProduct extends javax.swing.JFrame {
    public static String orderid = new String();

    private static final String USERNAME = "root";
    private static final String PASSWORD = "1234";
    private static final String CONN_STRING = "jdbc:mysql://localhost:3305/adventureworks";
    
    /** Creates new form ShowProduct */
    public ShowProduct() {
        initComponents();
        DefaultTableModel model = 
                   (DefaultTableModel)jTable1.getModel();
        Connection conn = null;
        try{
              conn = DriverManager.getConnection(CONN_STRING,USERNAME,PASSWORD);
              Statement stmt = (Statement) conn.createStatement();
              String st = "select salesorderid,orderdate,"
                      +   "customerID, firstname, lastname "
                      +   "from salesorderheader soh " +
                          "join contact cnt " +
                          "on soh.customerid = cnt.contactid";
              ResultSet rs= stmt.executeQuery(st);
              while (rs.next())
              { 
                  model.insertRow(model.getRowCount(), 
                          new Object[]{rs.getObject(1).toString(),
                                       rs.getObject(2).toString(),
                                       rs.getObject(3).toString(),
                                       rs.getObject(4).toString(),
                                       rs.getObject(5).toString()});
              }
              conn.close();
              
        }catch(SQLException e){
            System.err.println(e);}
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        dayFrom = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        monthFrom = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        yearFrom = new javax.swing.JTextField();
        dayTo = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        monthTo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        yearTo = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        SearchText = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Order Date", "Customer ID", "First Name", "Last Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventoryproject/back.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("Products");

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel2.setText("Date From:");

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel3.setText("    Date To:");

        jLabel4.setText("/");

        jLabel5.setText("/");

        yearFrom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearFromActionPerformed(evt);
            }
        });

        jLabel6.setText("/");

        jLabel7.setText("/");

        jLabel8.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel8.setText("Search By First Name:");

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventoryproject/search.png"))); // NOI18N
        jButton2.setText("Search");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventoryproject/invoice icon icon.png"))); // NOI18N
        jButton3.setText("Invoice");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventoryproject/search.png"))); // NOI18N
        jButton4.setText("Search");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jScrollPane1))
                    .add(layout.createSequentialGroup()
                        .add(15, 15, 15)
                        .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 194, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(238, 238, 238)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jLabel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                            .add(jLabel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .add(18, 18, 18)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(yearTo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jLabel6)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(monthTo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jLabel7)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(dayTo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .add(layout.createSequentialGroup()
                                .add(yearFrom, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 8, Short.MAX_VALUE)
                                .add(jLabel4)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(monthFrom, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jLabel5)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(dayFrom, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(124, 124, 124)))
                        .add(jButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 192, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jButton3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE))
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 151, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jLabel8)
                        .add(18, 18, 18)
                        .add(SearchText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 182, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jButton4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jLabel8, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(SearchText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton4))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 475, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 93, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 35, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(dayFrom, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel4)
                            .add(monthFrom, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel5)
                            .add(yearFrom, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(dayTo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel6)
                            .add(monthTo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel7)
                            .add(yearTo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(layout.createSequentialGroup()
                        .add(7, 7, 7)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jButton3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jButton2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.setVisible(false);
        new MainMenu().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        String fd,fm,fy,td,tm,ty;
        fd=dayFrom.getText().toString();
        fm=monthFrom.getText().toString();
        fy=yearFrom.getText().toString();
        td=dayTo.getText().toString();
        tm=monthTo.getText().toString();
        ty=yearTo.getText().toString();
        if (!((fd.isEmpty())||(fm.isEmpty())||(fy.isEmpty())||
                (td.isEmpty())||(tm.isEmpty())||(ty.isEmpty())))
        {    
         jTable1.setModel(
          new DefaultTableModel(null, new Object[]{"Order ID",
              "Order Date","Cusomer ID","First Name","Last Name"}));
         DefaultTableModel model = 
                   (DefaultTableModel)jTable1.getModel();    
        Connection conn = null;
        try{
              conn = DriverManager.getConnection(CONN_STRING,USERNAME,PASSWORD);
              Statement stmt = (Statement) conn.createStatement();
              String st = "select salesorderid,orderdate,"
                      +   "customerID, firstname, lastname "
                      +   "from salesorderheader soh " +
                          "join contact cnt " +
                          "on soh.customerid = cnt.contactid "+
                          "where orderdate >= '"
                      +fy+"-"+fm+"-"+fd
                      + "' and orderdate<='"
                      +ty+"-"+tm+"-"+td
                      + "'";
              ResultSet rs= stmt.executeQuery(st);
              while (rs.next())
              { 
                  model.insertRow(model.getRowCount(), 
                          new Object[]{rs.getObject(1).toString(),
                                       rs.getObject(2).toString(),
                                       rs.getObject(3).toString(),
                                       rs.getObject(4).toString(),
                                       rs.getObject(5).toString()});
              }
              conn.close();
              
        }catch(SQLException e)
        {
             model = 
                   (DefaultTableModel)jTable1.getModel();
         conn = null;
        try{
              conn = DriverManager.getConnection(CONN_STRING,USERNAME,PASSWORD);
              Statement stmt = (Statement) conn.createStatement();
              String st = "select salesorderid,orderdate," +
                          "customerID, firstname, lastname " +
                          "from salesorderheader soh " +
                          "join contact cnt " +
                          "on soh.customerid = cnt.contactid";
              ResultSet rs= stmt.executeQuery(st);
              while (rs.next())
              { 
                  model.insertRow(model.getRowCount(), 
                          new Object[]{rs.getObject(1).toString(),
                                       rs.getObject(2).toString(),
                                       rs.getObject(3).toString(),
                                       rs.getObject(4).toString(),
                                       rs.getObject(5).toString()});
              }
              conn.close();
              
        }catch(SQLException e2)
        {System.err.println(e2);}
            
           // System.err.println(e);
        }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
        String ST;
        ST = SearchText.getText().toString();
        
        if (!((ST.isEmpty())))
        {
            jTable1.setModel(
                    new DefaultTableModel(null, new Object[]{"Order ID", 
                        "Order Date", "Customer ID", "First Name", "Last Name"}));
            DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
            Connection conn = null;
            try {
                conn =DriverManager.getConnection(CONN_STRING,USERNAME,PASSWORD);
                Statement stmt = (Statement) conn.createStatement();
                String st ="select salesorderid,orderdate,"
                      +   "customerID, firstname, lastname "
                      +   "from salesorderheader soh " +
                          "join contact cnt " +
                          "on soh.customerid = cnt.contactid "+
                           "where firstname like '"+ST+"%'";
                ResultSet rs =stmt.executeQuery(st);
                while (rs.next())
                {
                    model.insertRow(model.getRowCount(),
                            new Object[]{rs.getObject(1).toString(),
                                         rs.getObject(2).toString(),
                                         rs.getObject(3).toString(),
                                         rs.getObject(4).toString(),
                                         rs.getObject(5).toString()});
                }
                conn.close();

            }catch (SQLException e)
            { model = (DefaultTableModel)jTable1.getModel();
            conn = null;
            try {
                conn = DriverManager.getConnection(CONN_STRING,USERNAME,PASSWORD);
                Statement stmt = (Statement) conn.createStatement();
                String st ="select salesorderid,orderdate,"
                      +   "customerID, firstname, lastname "
                      +   "from salesorderheader soh " +
                          "join contact cnt " +
                          "on soh.customerid = cnt.contactid ";
                ResultSet rs = stmt.executeQuery(st);
                while (rs.next())
                {
                    model.insertRow(model.getRowCount(),
                            new Object[]{rs.getObject(1).toString(),
                                         rs.getObject(2).toString(),
                                         rs.getObject(3).toString(),
                                         rs.getObject(4).toString(),
                                         rs.getObject(5).toString()});
                }
                conn.close();
            }catch (SQLException e2)
            {System.err.println(e2);
            }
        }}
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        
        int tableRow=jTable1.getSelectedRow();
        orderid = jTable1.getModel().getValueAt(tableRow, 0).toString();
        this.setVisible(false);
        new Invoice(orderid).setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void yearFromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearFromActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_yearFromActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ShowProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ShowProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShowProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShowProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ShowProduct().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField SearchText;
    private javax.swing.JTextField dayFrom;
    private javax.swing.JTextField dayTo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField monthFrom;
    private javax.swing.JTextField monthTo;
    private javax.swing.JTextField yearFrom;
    private javax.swing.JTextField yearTo;
    // End of variables declaration//GEN-END:variables

}
